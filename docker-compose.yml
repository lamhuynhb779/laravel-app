version: '3.8'
services:
  nginx:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./.docker/nginx-app/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
  db:
    image: mysql:5.7
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: 'laraveldb'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_PASSWORD: ''
#  db_mysql8:
#    image: mysql:8.0
#    restart: always
#    ports:
#      - "3309:3306"
#    environment:
#      MYSQL_DATABASE: 'laraveldb8'
#      MYSQL_ALLOW_EMPTY_PASSWORD: 1
#      MYSQL_PASSWORD: ''
  redis:
    image: redis:latest
    ports:
      - "63792:6379"
    volumes:
      - redis-data-store:/data
  app:
    build:
      context: .
      dockerfile: .docker/app/Dockerfile
    image: 'laravelapp'
#    ports:
#      - "8080:80"
#    deploy:
#      mode: replicated
#      replicas: 2
    volumes:
      - ./:/var/www/html
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=notification_system
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secret
    volumes:
      - mongodb_data_store:/data/db
  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
#    networks:
#      - kafka-net
  kafka:
    image: bitnami/kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
#    networks:
#      - kafka-net
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/log/:/var/log/rabbitmq/
#    networks:
#      - rabbitmq_net

volumes:
  redis-data-store:
  mongodb_data_store:
    driver: "local"
#networks:
#  kafka-net:
#    driver: bridge
